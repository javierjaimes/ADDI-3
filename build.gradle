plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    // for test coverage reports
    id 'jacoco'

    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination layout.buildDirectory.dir('jacocoHtml').get().asFile
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 8.5
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.4.2')


    // Mapping with mapstruct
    implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.4.2.Final'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
    testCompile "org.mapstruct:mapstruct-jdk8:1.4.2.Final"
    implementation "org.mapstruct:mapstruct-jdk8:1.4.2.Final"

    implementation 'org.projectlombok:lombok'
    compile 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

}

test {
    useJUnitPlatform()
}

application {
    // Define the main class for the application.
    mainClassName = 'co.com.addi.AddiApp'
}

bootRun {
    standardInput = System.in
}


